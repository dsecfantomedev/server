CREATE DATABASE IF NOT EXISTS QUALITUS;
USE QUALITUS;

CREATE TABLE IF NOT EXISTS B_SITE (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nom VARCHAR(50),
  Etat VARCHAR(50),
  dateCreation DATETIME,
  dateModification DATETIME
);

CREATE TABLE IF NOT EXISTS B_FONCTION (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nom VARCHAR(100),
  Role_Associe VARCHAR(100),
  Permissions_Associe TEXT,
  Etat VARCHAR(50),
  dateCreation DATETIME,
  dateModification DATETIME
);

CREATE TABLE IF NOT EXISTS B_PROGRAMME (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nom VARCHAR(50),
  Etat VARCHAR(50),
  dateCreation DATETIME,
  dateModification DATETIME
);

CREATE TABLE IF NOT EXISTS B_GRILLE (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nom VARCHAR(50),
  seuil_charte INT,
  seuil_client INT,
  seuil_activite FLOAT,
  seuil_conformite FLOAT,
  url LONGTEXT,
  Etat VARCHAR(50),
  dateCreation DATETIME,
  dateModification DATETIME
);

CREATE TABLE IF NOT EXISTS B_UTILISATEUR (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nom VARCHAR(100),
  prenom VARCHAR(100),
  nom_utilisateur VARCHAR(100),
  genre VARCHAR(100),
  email VARCHAR(100),
  telephone VARCHAR(15),
  ville VARCHAR(20),
  adresse VARCHAR(20),
  password TEXT,
  default_password TEXT,
  id_Fonction INT,
  id_Site INT,
  id_Programme INT,
  id_Grille INT,
  status VARCHAR(50),
  dateCreation DATETIME,
  dateModification DATETIME,
  nb_session_login INT,
  UNIQUE(email),
  UNIQUE(nom_utilisateur),
  FOREIGN KEY(id_Fonction) REFERENCES B_FONCTION(id),
  FOREIGN KEY(id_Site) REFERENCES B_SITE(id),
  FOREIGN KEY(id_Programme) REFERENCES B_PROGRAMME(id),
  FOREIGN KEY(id_Grille) REFERENCES B_GRILLE(id)
);

CREATE TABLE IF NOT EXISTS B_MOTIF_MA_VOIX_COMPTE (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nomMotif VARCHAR(50),
  dateCreation DATETIME
);

CREATE TABLE IF NOT EXISTS B_MA_VOIX_COMPTE (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_UTILISATEUR INT,
  motif_ma_voix_compte VARCHAR(100),
  message TEXT,
  dateCreation DATETIME,
  FOREIGN KEY(id_UTILISATEUR) REFERENCES B_UTILISATEUR(id)
);

CREATE TABLE IF NOT EXISTS B_SLA (
  id INT AUTO_INCREMENT PRIMARY KEY,
  source VARCHAR(100),
  type VARCHAR(50),
  delai INT,
  priorite VARCHAR(10),
  Etat VARCHAR(50),
  dateCreationSla DATETIME,
  dateModification DATETIME
);

CREATE TABLE IF NOT EXISTS B_CATEGORIE (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nom VARCHAR(100),
  Etat VARCHAR(50),
  dateCreationCategorie DATETIME,
  dateModification DATETIME
);

CREATE TABLE IF NOT EXISTS B_SOUS_CATEGORIE (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nom VARCHAR(100),
  Etat VARCHAR(50),
  dateCreationSousCategorie DATETIME,
  id_Categorie INT,
  dateModification DATETIME,
  FOREIGN KEY(id_Categorie) REFERENCES B_CATEGORIE(id)
);

CREATE TABLE IF NOT EXISTS B_FICHE (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_gestionnaire INT,
  titre VARCHAR(100),
  dateReception DATETIME,
  dateDebut DATETIME,
  dateVisibilite DATETIME,
  dateFin DATETIME,
  dateEnregistrement DATETIME,
  dateModification DATETIME,
  id_Categorie INT,
  id_SousCategorie INT,
  id_Sla INT,
  ETAT VARCHAR(10),
  date_Archive DATETIME,
  archive_par INT,
  url VARCHAR(250),
  extention VARCHAR(10),
  FOREIGN KEY(id_gestionnaire) REFERENCES B_UTILISATEUR(id),
  FOREIGN KEY(id_Categorie) REFERENCES B_CATEGORIE(id),
  FOREIGN KEY(id_SousCategorie) REFERENCES B_SOUS_CATEGORIE(id),
  FOREIGN KEY(id_Sla) REFERENCES B_SLA(id),
  FOREIGN KEY(archive_par) REFERENCES B_UTILISATEUR(id)
);
CREATE TABLE IF NOT EXISTS B_QUIZ (
  id INT AUTO_INCREMENT PRIMARY KEY,
  libelleQuestion TEXT,
  reponseQuestion TEXT,
  dateCreation DATETIME,
  id_Fiche INT,
  FOREIGN KEY(id_Fiche) REFERENCES B_FICHE(id)
);

CREATE TABLE IF NOT EXISTS B_REPONSE_QUIZ (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_UTILISATEUR INT,
  id_FICHE INT,
  RESULTAT INT,
  ETAT VARCHAR(10),
  STATUT VARCHAR(20),
  NB_RETEST INT,
  date_Quiz DATETIME,
  date_RETEST DATETIME,
  FOREIGN KEY(id_UTILISATEUR) REFERENCES B_UTILISATEUR(id),
  FOREIGN KEY(id_FICHE) REFERENCES B_FICHE(id)
);

CREATE TABLE IF NOT EXISTS B_R_SUPERVISEUR_AGENT (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_SUPERVISEUR INT,
  id_AGENT INT,
  dateCreation DATETIME,
  FOREIGN KEY(id_SUPERVISEUR) REFERENCES B_UTILISATEUR(id),
  FOREIGN KEY(id_AGENT) REFERENCES B_UTILISATEUR(id)
);

CREATE TABLE IF NOT EXISTS B_NOTIFICATION (
  id INT AUTO_INCREMENT PRIMARY KEY,
  titre VARCHAR(100),
  message TEXT,
  type VARCHAR(20),
  dateReception DATETIME,
  id_UTILISATEUR INT,
  id_FICHE INT,
  url LONGTEXT,
  FOREIGN KEY(id_UTILISATEUR) REFERENCES B_UTILISATEUR(id),
  FOREIGN KEY(id_FICHE) REFERENCES B_FICHE(id)
);

CREATE TABLE IF NOT EXISTS B_HISTORIQUE (
  id INT AUTO_INCREMENT PRIMARY KEY,
  dateConsultation DATETIME,
  id_UTILISATEUR INT,
  id_FICHE INT,
  FOREIGN KEY(id_UTILISATEUR) REFERENCES B_UTILISATEUR(id),
  FOREIGN KEY(id_FICHE) REFERENCES B_FICHE(id)
);

CREATE TABLE IF NOT EXISTS B_COMMENTAIRE (
  id INT AUTO_INCREMENT PRIMARY KEY,
  message TEXT,
  dateCommentaire DATETIME,
  id_UTILISATEUR INT,
  id_FICHE INT,
  FOREIGN KEY(id_UTILISATEUR) REFERENCES B_UTILISATEUR(id),
  FOREIGN KEY(id_FICHE) REFERENCES B_FICHE(id)
);

CREATE TABLE IF NOT EXISTS B_SONDAGE (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_UTILISATEUR INT,
  id_FICHE INT,
  utilite INT,
  exactitude INT,
  dateSondage DATETIME,
  FOREIGN KEY(id_UTILISATEUR) REFERENCES B_UTILISATEUR(id),
  FOREIGN KEY(id_FICHE) REFERENCES B_FICHE(id)
);

CREATE TABLE IF NOT EXISTS B_ON_TIME (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_Fiche INT,
  temps INT,
  date_effective DATETIME,
  id_Sla INT,
  delai INT,
  on_time VARCHAR(10),
  FOREIGN KEY(id_Fiche) REFERENCES B_FICHE(id),
  FOREIGN KEY(id_Sla) REFERENCES B_SLA(id)
);
